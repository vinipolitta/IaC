- hosts: terraform-ansible
  become: true

  tasks:
    - name: Instalando o python3, virtualenv
      apt:
        pkg:
          - python3
          - virtualenv
        update_cache: yes

    - name: Instalar o OpenJDK 17 (Java 17)
      apt:
        pkg: openjdk-17-jdk
        update_cache: yes
      become: true

    - name: Instalar Maven
      apt:
        name: maven
        update_cache: yes

    - name: Git Clone phyton
      ansible.builtin.git:
        repo: https://github.com/guilhermeonrails/clientes-leo-api.git
        dest: /home/ubuntu/tcc
        version: master
        force: yes

    - name: Git Clone java
      ansible.builtin.git:
        repo: https://github.com/vinipolitta/medApi.git
        dest: /home/ubuntu/tcc/java
        version: master
        force: yes

    - name: Instalando dependencias com pip (Django e Django Rest)
      pip:
        virtualenv: /home/ubuntu/tcc/venv
        requirements: /home/ubuntu/tcc/requirements.txt

    - name: Instalar o Node.js
      apt:
        name: "nodejs"
        state: present
        update_cache: yes

    - name: Alterando o hosts do settings
      lineinfile:
        path: /home/ubuntu/tcc/setup/settings.py
        regexp: "ALLOWED_HOSTS"
        line: 'ALLOWED_HOSTS = ["*"]'
        backrefs: yes

    - name: configurando o banco de dados
      shell: ". /home/ubuntu/tcc/venv/bin/activate; python /home/ubuntu/tcc/manage.py migrate"

    - name: carregando os dados iniciais
      shell: ". /home/ubuntu/tcc/venv/bin/activate; python /home/ubuntu/tcc/manage.py loaddata clientes.json"

    - name: iniciando servidor
      shell: ". /home/ubuntu/tcc/venv/bin/activate; nohup python /home/ubuntu/tcc/manage.py runserver 0.0.0.0:8000 &"

    # - name: configurando o mvn no projeto java
    #   shell: "cd /home/ubuntu/tcc/java; mvn clean install"
